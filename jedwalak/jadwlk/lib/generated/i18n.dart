import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static S current;

  static const GeneratedLocalizationsDelegate delegate =
    GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get about => "Your schedule: an application that enables you to arrange your daily, weekly and monthly tasks\nYou can choose the appropriate schedule for you through the list of tables presented in the system, and you can also choose the background appropriate for you.\nYou can also save the tables for reuse, and you can also download the tables for you to keep on your own machine\nYour schedule is your gateway to get tables with beautiful backgrounds of your choice";
  String get aboutUs => "About us";
  String get abouttxt => "More";
  String get addDept => "Add Category";
  String get addTab => "Add Table";
  String get admin => "admin";
  String get apps => "APPLICATIONS";
  String get bgMng => "Backgrounds";
  String get cancel => "Cancel";
  String get cannt_be_null => "This Field Can not Be Null";
  String get chngBg => "Change background";
  String get choseDept => "Chose Category";
  String get chose_typ => "Chose Type";
  String get colCount => "Columns Count";
  String get colmn => "Column";
  String get confirmPass => "Password Confirm";
  String get contactau => "CONTACT US";
  String get custname => "Your Name";
  String get delete_conf => "Do you want to delete??";
  String get delete_success => "Deleted Successfully";
  String get deptMng => "Categories Management";
  String get dept_name => "Name";
  String get depts => "Categories";
  String get det => "Details";
  String get editDept => "Edit Category";
  String get editTab => "Edit Table";
  String get email => "Email";
  String get error => "Error";
  String get excuteing => "The operation is in progress ";
  String get exit_confirm => "Do you want to exit?";
  String get faild_upload => "Update failed";
  String get failed => "The process was failed";
  String get failedSend => "Send Failed";
  String get failedlogin => "Login failed";
  String get fillTable => "Fill the table";
  String get fullTable => "Filled Tables";
  String get hometitle => "Get started and design your table look";
  String get incorrectvalid => "Incorrect validation number";
  String get interemailorphone => "Enter email or phone number";
  String get internt_conf => "Sure about internet connection";
  String get intervalid => "Enter the validation number";
  String get lang => "عــــربي";
  String get loading => "Loading...";
  String get login => "Login";
  String get logining => "Signing in...";
  String get logout => "Logout";
  String get more => "More";
  String get must_chose_dept => "You must chose Category";
  String get name => "Your Table";
  String get new_acount => "Create new account";
  String get new_item => "New";
  String get new_req => "New Request";
  String get no => "No";
  String get no_connect => "No Internet Connection";
  String get nodata => "There is currently no data";
  String get notyp => "No types";
  String get pass => "Password";
  String get passnotmutch => "Password does not match";
  String get passoremailerror => "Password or email is incorrect";
  String get per => "Priority";
  String get phon => "Phone Number";
  String get register => "Register";
  String get registerNow => "No account? Register now";
  String get registering => "Signing Up...";
  String get req => "Requirements";
  String get rowCount => "Rows Count";
  String get save => "Save";
  String get saveAsImage => "Save as image";
  String get send => "Send";
  String get sending => "Sending...";
  String get services => "OUT SERVICES";
  String get sites => "WEBSITES";
  String get success => "The process Successful";
  String get successLogin => "Login successfully";
  String get successSaveImage => "Image saved successfully";
  String get successSend => "Sent Successfully";
  String get successlogout => "Logout successfully";
  String get sug => "Suggestions";
  String get systems => "SYSTEMS";
  String get tableMng => "Tables Management";
  String get tableName => "Table Name";
  String get tables => "Tables";
  String get title => "NETAQ FOR SOFTWARE";
  String get user => "user";
  String get username => "User Name";
  String get vission => "UOR VISION";
  String get vissiontxt => "More";
  String get vistor => "visitor";
  String get wait => "Please wait...";
  String get writeSug => "Write your suggestion";
  String get yes => "Yes";
}

class $ar extends S {
  const $ar();

  @override
  TextDirection get textDirection => TextDirection.rtl;

  @override
  String get cancel => "إلغاء";
  @override
  String get addTab => "إضافة جدول";
  @override
  String get vission => "رؤيتنا";
  @override
  String get addDept => "أضافة قسم";
  @override
  String get colmn => "عمود";
  @override
  String get vissiontxt => "تتطلع شركة نطاق للبرمجيات لتقديم افضل الانطة الخدمية للسوق والتي تشمل انطمة الكمبيوتر وتطبيقات الجوالات والمواقع الالكترونية والتي من خلالها نطمن جوده عالية في اعمال المجالات التي تستخدم منتجاتنا";
  @override
  String get registering => "جار انشاء حساب جديد...";
  @override
  String get about => " جدولك: تطبيق يمكنك من ترتيب مهامك اليومية والاسبوعية والشهرية \nحيث تستطيع ان تختار الجدول المناسب لك من خلال قائمة الجداول المطروحة في النظام، كما تستطيع اختيار الخلفية المناسبة لك. \n يمكنك أيضا ان تحفظ الجداول لإعادة استخدامها، كما يمكنك أيضا تحميل الجدول لتستطيع الاحتفاظ به على جهازك الخاص جدولك هو بوابتك للحصول على جداول مميزة بخلفيات جميلة من اختيارك";
  @override
  String get faild_upload => "فشلت عملية التحديث";
  @override
  String get tableName => "اسم الجدول";
  @override
  String get cannt_be_null => "لايمكن ترك الحقل فارغ";
  @override
  String get no_connect => "لا يوجد اتصال بالانترنت";
  @override
  String get det => "التفاصيل";
  @override
  String get tables => "الجداول";
  @override
  String get logout => "تسجيل االخروج";
  @override
  String get must_chose_dept => "يجب تحديد القسم اولا";
  @override
  String get passnotmutch => "كلمة المرور غير مطابقة";
  @override
  String get writeSug => "أكتب مقترحك هنا";
  @override
  String get tableMng => "إدارة الجداول";
  @override
  String get fullTable => "جداول تم تعبئتها";
  @override
  String get interemailorphone => "ادخل البريد الالكتروني او رقم التلفون";
  @override
  String get new_acount => "حساب جديد";
  @override
  String get editDept => "تعديل القسم";
  @override
  String get passoremailerror => "كلمة المرور او الايميل غير صحيح";
  @override
  String get req => "يمكن الان من خلال التطبيق طلب الخدمة التي تريدها  ماعليك سوى ادخال بياناتك اللازمة للتواصل معك وكتابة كل متطلباتك ";
  @override
  String get chngBg => "تغيير الخلفية";
  @override
  String get delete_conf => "هل تريد الحذف؟؟";
  @override
  String get pass => "كلمة المرور";
  @override
  String get contactau => "إتصل بنا";
  @override
  String get failed => "فشلت العملية";
  @override
  String get loading => "جار التحميل...";
  @override
  String get successLogin => "نم تسجيل الدخول بنجاح";
  @override
  String get exit_confirm => "هل تريد الخروج؟";
  @override
  String get success => "تمت العملية بنجاح";
  @override
  String get name => "جدولك";
  @override
  String get intervalid => "ادخل رقم التحقق";
  @override
  String get incorrectvalid => "رقم التحقق غير صحيح";
  @override
  String get send => "ارسال";
  @override
  String get hometitle => "إبدأ الآن وقم بتصميم شكل جدولك";
  @override
  String get no => "لا";
  @override
  String get new_item => "جديد";
  @override
  String get aboutUs => "من نحن؟";
  @override
  String get wait => "الرجاء الانتظار...";
  @override
  String get excuteing => "جار تنفيذ العملية ";
  @override
  String get sug => "المقترحات";
  @override
  String get abouttxt => "شركة نطاق للبرمجيات \n هي شركة رائدة في عالم البرمجيات \n  توفر خدمات متكاملة في مجالات متعددة مثل الانظمة الخاصة بالكمبيوتر او التطبيقات الخاصة بالجوالات او الموافع الالكترونية \n";
  @override
  String get save => "حفظ";
  @override
  String get logining => "جار تسجيل الدخول...";
  @override
  String get admin => "مدير";
  @override
  String get deptMng => "إدارة الأقسام";
  @override
  String get failedSend => "فشل الإرسال";
  @override
  String get title => "نطاق للبرمجيات";
  @override
  String get login => "تسجيل الدخول";
  @override
  String get error => "خطأ";
  @override
  String get successSend => "تم إرسال المقترح بنجاح";
  @override
  String get choseDept => "حدد السم";
  @override
  String get saveAsImage => "حفظ كصورة";
  @override
  String get fillTable => "تعبئة الجدول";
  @override
  String get systems => "أنظمة";
  @override
  String get internt_conf => "تاكد من اتصالك بالانترنت";
  @override
  String get sending => "جار الارسال...";
  @override
  String get successSaveImage => "تم حفظ الصورة بنجاح";
  @override
  String get rowCount => "عدد الصفوف";
  @override
  String get lang => "English";
  @override
  String get editTab => "نعديل جدول";
  @override
  String get successlogout => "تم تسجيل الخروج بنجاح";
  @override
  String get email => "البريد الالكتروني";
  @override
  String get apps => "تطبيقات";
  @override
  String get delete_success => "تم الحذف بنجاح";
  @override
  String get phon => "رقم التلفون";
  @override
  String get yes => "نعم";
  @override
  String get more => "قرائة المزيد";
  @override
  String get notyp => "لا توجد انواع";
  @override
  String get dept_name => "ألاسم";
  @override
  String get services => "خدماتنا";
  @override
  String get registerNow => "لايوجد لديك حساب؟ سجل الان";
  @override
  String get nodata => "لا يوجد بيانات حاليا";
  @override
  String get vistor => "زائر";
  @override
  String get failedlogin => "خطأ في تسجيل الدخول";
  @override
  String get bgMng => "الخلفيات";
  @override
  String get confirmPass => "تأكيد كلمة المرور";
  @override
  String get chose_typ => "اختر النوع";
  @override
  String get colCount => "عدد الأعمدة";
  @override
  String get user => "مستخدم";
  @override
  String get custname => "اسمك";
  @override
  String get depts => "الأقسام";
  @override
  String get new_req => "طلب جديد";
  @override
  String get register => "انشاء حساب";
  @override
  String get username => "إسم المستخدم";
}

class $en extends S {
  const $en();
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("ar", ""),
      Locale("en", ""),
    ];
  }

  LocaleListResolutionCallback listResolution({Locale fallback, bool withCountry = true}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported, withCountry);
      }
    };
  }

  LocaleResolutionCallback resolution({Locale fallback, bool withCountry = true}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported, withCountry);
    };
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "ar":
          S.current = const $ar();
          return SynchronousFuture<S>(S.current);
        case "en":
          S.current = const $en();
          return SynchronousFuture<S>(S.current);
        default:
          // NO-OP.
      }
    }
    S.current = const S();
    return SynchronousFuture<S>(S.current);
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale, true);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;

  ///
  /// Internal method to resolve a locale from a list of locales.
  ///
  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported, bool withCountry) {
    if (locale == null || !_isSupported(locale, withCountry)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  ///
  /// Returns true if the specified locale is supported, false otherwise.
  ///
  bool _isSupported(Locale locale, bool withCountry) {
    if (locale != null) {
      for (Locale supportedLocale in supportedLocales) {
        // Language must always match both locales.
        if (supportedLocale.languageCode != locale.languageCode) {
          continue;
        }

        // If country code matches, return this locale.
        if (supportedLocale.countryCode == locale.countryCode) {
          return true;
        }

        // If no country requirement is requested, check if this locale has no country.
        if (true != withCountry && (supportedLocale.countryCode == null || supportedLocale.countryCode.isEmpty)) {
          return true;
        }
      }
    }
    return false;
  }
}

String getLang(Locale l) => l == null
  ? null
  : l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
